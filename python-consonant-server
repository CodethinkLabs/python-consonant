#!/usr/bin/env python
#
# Copyright (C) 2014 Codethink Limited.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.


"""A simple standalone Consonant web service."""


import cliapp
import consonant


class PythonConsonantServer(cliapp.Application):

    def add_settings(self):
        self.settings.string(['memcached'],
                             'memcached server to use for caching (optional)',
                             metavar='HOST[:PORT]')

    def process_args(self, args):
        if len(args) < 2:
            raise cliapp.AppException('Usage: %s REPOSITORY PORT' %
                                      __file__)

        repository = args[0]
        port = int(args[1])

        # obtain a Consonant service to operate against the repository
        factory = consonant.service.factories.ServiceFactory()
        store = factory.service(repository)

        # use memcached if requested
        if 'memcached' in self.settings and self.settings['memcached']:
            store.set_cache(consonant.store.caches.MemcachedObjectCache(
                [self.settings['memcached']]))

        # instantiate and run a web service to service the store repository
        service = consonant.web.services.SimpleWebService(store)
        service.run(port)

if __name__ == '__main__':
    PythonConsonantServer().run()
