Apply and validate transactions and check the results
=====================================================

Start a transaction
-------------------

    IMPLEMENTS WHEN starting a transaction based on commit ([0-9abcdef]{8})

    cat <<-EOF > $DATADIR/transaction.yaml
    Content-Type: multipart/mixed; boundary=CONSONANT

    --CONSONANT
    Content-Type: application/x-yaml

    action: begin
    source: $MATCH_1
    EOF

Define a commit action
----------------------

    IMPLEMENTS WHEN defining a commit action
    cat <<-EOF >> $DATADIR/transaction.yaml
    --CONSONANT
    Content-Type: application/x-yaml

    action: commit
    EOF

Define a create action
----------------------

    IMPLEMENTS WHEN defining a create action
    cat <<-EOF >> $DATADIR/transaction.yaml
    --CONSONANT
    Content-Type: application/x-yaml

    action: create
    EOF

Define a delete action
----------------------

    IMPLEMENTS WHEN defining a delete action
    cat <<-EOF >> $DATADIR/transaction.yaml
    --CONSONANT
    Content-Type: application/x-yaml

    action: delete
    EOF

Define an update action
----------------------

    IMPLEMENTS WHEN defining an update action
    cat <<-EOF >> $DATADIR/transaction.yaml
    --CONSONANT
    Content-Type: application/x-yaml

    action: update
    EOF

Define an update-raw-property action
----------------------

    IMPLEMENTS WHEN defining an update-raw-property action
    cat <<-EOF >> $DATADIR/transaction.yaml
    --CONSONANT
    Content-Type: application/x-yaml

    action: update-raw-property
    EOF

Define raw property data with a given content type
--------------------------------------------------

    IMPLEMENTS WHEN defining raw property data with the content type "(.+)"
    cat <<-EOF >> $DATADIR/transaction.yaml
    --CONSONANT
    Content-Type: $MATCH_1

    some data
    EOF

Define object properties
------------------------

    IMPLEMENTS WHEN setting the object properties
    cat <<-EOF >> $DATADIR/transaction.yaml
    properties:
    EOF

Setting fields of the current transaction action
------------------------------------------------

    IMPLEMENTS WHEN setting the action ([a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]) to (.+)

    cat <<-EOF >> $DATADIR/transaction.yaml
    $MATCH_1: $MATCH_2
    EOF

Setting the target object of an action
--------------------------------------

    IMPLEMENTS WHEN setting the action target object to (.+)

    cat <<-EOF >> $DATADIR/transaction.yaml
    object:
        $MATCH_1
    EOF

Setting object boolean properties
------------------------------

    IMPLEMENTS WHEN setting the object boolean property "(.+)" to (.+)
    cat <<-EOF >> $DATADIR/transaction.yaml
        $MATCH_1: $MATCH_2
    EOF

Setting object int properties
------------------------------

    IMPLEMENTS WHEN setting the object int property "(.+)" to (.+)
    cat <<-EOF >> $DATADIR/transaction.yaml
        $MATCH_1: $MATCH_2
    EOF

Setting object float properties
------------------------------

    IMPLEMENTS WHEN setting the object float property "(.+)" to (.+)
    cat <<-EOF >> $DATADIR/transaction.yaml
        $MATCH_1: $MATCH_2
    EOF

Setting object text properties
------------------------------

    IMPLEMENTS WHEN setting the object text property "(.+)" to (.+)
    cat <<-EOF >> $DATADIR/transaction.yaml
        $MATCH_1: $MATCH_2
    EOF

    IMPLEMENTS WHEN setting the object single-line text property "(.+)" to a multi-line string
    cat <<-EOF >> $DATADIR/transaction.yaml
        $MATCH_1: |
          Foo
          Bar
    EOF

Setting object timestamp properties
-----------------------------------

    IMPLEMENTS WHEN setting the object timestamp property "(.+)" to (.+)
    cat <<-EOF >> $DATADIR/transaction.yaml
        $MATCH_1: $MATCH_2
    EOF

Setting object reference properties
-----------------------------------

    IMPLEMENTS WHEN setting the object reference property "(.+)" to (.+)
    cat <<-EOF >> $DATADIR/transaction.yaml
        $MATCH_1:
            $MATCH_2
    EOF

Setting object list properties
------------------------------

    IMPLEMENTS WHEN setting the object list property "(.+)"
    cat <<-EOF >> $DATADIR/transaction.yaml
        $MATCH_1:
    EOF

    IMPLEMENTS WHEN adding a list element (.+)
    cat <<-EOF >> $DATADIR/transaction.yaml
        - $MATCH_1
    EOF

Submitting a transaction
------------------------

    IMPLEMENTS WHEN submitting the transaction

    cat $DATADIR/transaction.yaml

    run_consonant_store <<-EOF
    parser = consonant.transaction.parser.TransactionParser()
    transaction = parser.parse(open('transaction.yaml'))
    store.apply_transaction(transaction)
    EOF

    fail_unknown_api

Submitting an invalid transaction
---------------------------------

    IMPLEMENTS WHEN submitting the invalid transaction

    cat $DATADIR/transaction.yaml

    run_consonant_store <<-EOF || true
    parser = consonant.transaction.parser.TransactionParser()
    transaction = parser.parse(open('transaction.yaml'))
    store.apply_transaction(transaction)
    EOF

    fail_unknown_api

Submitting a transaction based on a non-existent commit
-------------------------------------------------------

    IMPLEMENTS WHEN submitting the transaction based on the non-existent commit

    cat $DATADIR/transaction.yaml

    run_consonant_store <<-EOF || true
    parser = consonant.transaction.parser.TransactionParser()
    transaction = parser.parse(open('transaction.yaml'))
    store.apply_transaction(transaction)
    EOF

    fail_unknown_api

Submitting a transaction with a validation hook
-----------------------------------------------

    IMPLEMENTS WHEN submitting the transaction with a validation hook that rejects card titles that begin with numbers

    cat $DATADIR/transaction.yaml

    run_consonant_store <<-EOF
    from consonant.transaction import validation

    class NoCardTitlesWithNumbers(validation.ValidationHook):
        def validate(self, service, commit):
            card_klass = service.klass(commit, 'card')
            card_objects = service.objects(commit, card_klass)
            for card in card_objects:
                title = card.properties['title'].value
                if title[0].isdigit():
                    raise validation.ValidationError(
                        'Card titles must not begin with digits')
            return True

    parser = consonant.transaction.parser.TransactionParser()
    transaction = parser.parse(open('transaction.yaml'))
    store.apply_transaction(transaction, [NoCardTitlesWithNumbers()])
    EOF

    IMPLEMENTS WHEN submitting the invalid transaction with a validation hook that rejects card titles that begin with numbers

    cat $DATADIR/transaction.yaml

    run_consonant_store <<-EOF || true
    from consonant.transaction import validation

    class NoCardTitlesWithNumbers(validation.ValidationHook):
        def validate(self, service, commit):
            card_klass = service.klass(commit, 'card')
            card_objects = service.objects(commit, card_klass)
            for card in card_objects:
                title = card.properties['title'].value
                if title[0].isdigit():
                    raise validation.ValidationError(
                        'Card titles must not begin with digits')
            return True

    parser = consonant.transaction.parser.TransactionParser()
    transaction = parser.parse(open('transaction.yaml'))
    store.apply_transaction(transaction, [NoCardTitlesWithNumbers()])
    EOF

Verify that a transaction only affects a certain number of objects
------------------------------------------------------------------

    IMPLEMENTS THEN the transaction affects exactly ([0-9]+) objects?

    CHANGED_OBJECTS=$(changed_objects master)
    run_python_test <<-EOF
    changed_objects = eval("$CHANGED_OBJECTS")
    assert len(changed_objects) == $MATCH_1
    EOF

    IMPLEMENTS THEN the transaction affects exactly ([0-9]+) objects? in "(.+)"

    CHANGED_OBJECTS=$(changed_objects "$MATCH_2")
    GIT_DIR="$DATADIR/test-store/.git" git show -p "$MATCH_2"
    run_python_test <<-EOF
    changed_objects = eval("$CHANGED_OBJECTS")
    assert len(changed_objects) == $MATCH_1
    EOF
