Apply and validate transactions and check the results
=====================================================

Start a transaction
-------------------

    IMPLEMENTS WHEN starting a transaction based on commit ([0-9abcdef]{8})

    cat <<-EOF > $DATADIR/transaction.yaml
    Content-Type: multipart/mixed; boundary=CONSONANT

    --CONSONANT
    Content-Type: application/x-yaml

    action: begin
    source: $MATCH_1
    EOF

Define a commit action
----------------------

    IMPLEMENTS WHEN defining a commit action
    cat <<-EOF >> $DATADIR/transaction.yaml
    --CONSONANT
    Content-Type: application/x-yaml

    action: commit
    EOF

Define a create action
----------------------

    IMPLEMENTS WHEN defining a create action
    cat <<-EOF >> $DATADIR/transaction.yaml
    --CONSONANT
    Content-Type: application/x-yaml

    action: create
    EOF

Define an update action
----------------------

    IMPLEMENTS WHEN defining an update action
    cat <<-EOF >> $DATADIR/transaction.yaml
    --CONSONANT
    Content-Type: application/x-yaml

    action: update
    EOF

Define object properties
------------------------

    IMPLEMENTS WHEN defining object properties
    cat <<-EOF >> $DATADIR/transaction.yaml
    properties:
    EOF

Setting fields of the current transaction action
------------------------------------------------

    IMPLEMENTS WHEN setting the action ([a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]) to "(.+)"

    cat <<-EOF >> $DATADIR/transaction.yaml
    $MATCH_1: $MATCH_2
    EOF

Setting the target object of an action
--------------------------------------

    IMPLEMENTS WHEN setting the action target object to "(.+)"

    cat <<-EOF >> $DATADIR/transaction.yaml
    object:
        $MATCH_1
    EOF

Setting object text properties
------------------------------

    IMPLEMENTS WHEN setting the object text property (.+) to "(.+)"
    cat <<-EOF >> $DATADIR/transaction.yaml
        $MATCH_1: $MATCH_2
    EOF

Submitting a transaction
------------------------

    IMPLEMENTS WHEN submitting the transaction

    cat $DATADIR/transaction.yaml

    run_consonant_store <<-EOF
    parser = consonant.transaction.parsers.TransactionParser()
    transaction = parser.parse(open('transaction.yaml'))
    validator = consonant.transaction.validation.CommitValidator()
    commit = store.prepare_transaction(transaction)
    store.commit_transaction(transaction, commit, validator)
    EOF

    fail_unknown_api

Submitting an invalid transaction
---------------------------------

    IMPLEMENTS WHEN submitting the invalid transaction

    cat $DATADIR/transaction.yaml

    run_consonant_store <<-EOF || true
    parser = consonant.transaction.parsers.TransactionParser()
    transaction = parser.parse(open('transaction.yaml'))
    validator = consonant.transaction.validation.CommitValidator()
    commit = store.prepare_transaction(transaction)
    store.commit_transaction(transaction, commit, validator)
    EOF

    fail_unknown_api

Submitting a transaction based on a non-existent commit
-------------------------------------------------------

    IMPLEMENTS WHEN submitting the transaction based on the non-existent commit

    cat $DATADIR/transaction.yaml

    run_consonant_store <<-EOF || true
    parser = consonant.transaction.parsers.TransactionParser()
    transaction = parser.parse(open('transaction.yaml'))
    validator = consonant.transaction.validation.CommitValidator()
    commit = store.prepare_transaction(transaction)
    store.commit_transaction(transaction, commit, validator)
    EOF

    fail_unknown_api

Verify that a transaction only affects a certain number of objects
------------------------------------------------------------------

    IMPLEMENTS THEN the transaction affects exactly ([0-9]+) objects?

    CHANGED_OBJECTS=$(changed_objects)
    run_python_test <<-EOF
    changed_objects = eval("$CHANGED_OBJECTS")
    assert len(changed_objects) == $MATCH_1
    EOF
